# NGINX Ingress configuration for HawkFish
# This example shows how to configure NGINX Ingress Controller
# for HawkFish with SSL termination and advanced features.

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hawkfish-ingress
  namespace: hawkfish
  annotations:
    # Basic NGINX configuration
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    
    # SSL/TLS configuration
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-protocols: "TLSv1.2 TLSv1.3"
    nginx.ingress.kubernetes.io/ssl-ciphers: "ECDHE-RSA-AES128-GCM-SHA256,ECDHE-RSA-AES256-GCM-SHA384"
    
    # Proxy configuration for large uploads (ISO files)
    nginx.ingress.kubernetes.io/proxy-body-size: "2g"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    
    # Buffer configuration for better performance
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "8k"
    nginx.ingress.kubernetes.io/proxy-buffers-number: "8"
    
    # WebSocket support for console access
    nginx.ingress.kubernetes.io/proxy-set-headers: |
      Connection "upgrade"
      Upgrade $http_upgrade
      X-Forwarded-For $proxy_add_x_forwarded_for
      X-Forwarded-Proto $scheme
      X-Real-IP $remote_addr
    
    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Referrer-Policy "strict-origin-when-cross-origin" always;
      add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self';" always;
    
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit-connections: "10"
    nginx.ingress.kubernetes.io/rate-limit-requests-per-minute: "300"
    
    # Custom error pages (optional)
    nginx.ingress.kubernetes.io/custom-http-errors: "404,503"
    nginx.ingress.kubernetes.io/default-backend: "hawkfish-error-pages"

spec:
  tls:
  - hosts:
    - hawkfish.example.com
    - api.hawkfish.example.com
    secretName: hawkfish-tls
  
  rules:
  # Main HawkFish interface
  - host: hawkfish.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: hawkfish
            port:
              number: 80
  
  # API-specific subdomain (optional)
  - host: api.hawkfish.example.com
    http:
      paths:
      - path: /redfish
        pathType: Prefix
        backend:
          service:
            name: hawkfish
            port:
              number: 80

---
# Optional: Custom error pages service
apiVersion: v1
kind: Service
metadata:
  name: hawkfish-error-pages
  namespace: hawkfish
spec:
  selector:
    app: hawkfish-error-pages
  ports:
  - port: 80
    targetPort: 8080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hawkfish-error-pages
  namespace: hawkfish
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hawkfish-error-pages
  template:
    metadata:
      labels:
        app: hawkfish-error-pages
    spec:
      containers:
      - name: error-pages
        image: nginx:alpine
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: error-pages
          mountPath: /usr/share/nginx/html
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
      volumes:
      - name: error-pages
        configMap:
          name: hawkfish-error-pages
      - name: nginx-config
        configMap:
          name: hawkfish-error-nginx-config

---
# Error pages content
apiVersion: v1
kind: ConfigMap
metadata:
  name: hawkfish-error-pages
  namespace: hawkfish
data:
  404.html: |
    <!DOCTYPE html>
    <html>
    <head>
        <title>HawkFish - Page Not Found</title>
        <style>
            body { font-family: Arial, sans-serif; text-align: center; padding: 50px; }
            h1 { color: #333; }
            p { color: #666; }
        </style>
    </head>
    <body>
        <h1>404 - Page Not Found</h1>
        <p>The requested resource was not found on this HawkFish instance.</p>
        <p><a href="/">Return to HawkFish Home</a></p>
    </body>
    </html>
  
  503.html: |
    <!DOCTYPE html>
    <html>
    <head>
        <title>HawkFish - Service Unavailable</title>
        <style>
            body { font-family: Arial, sans-serif; text-align: center; padding: 50px; }
            h1 { color: #333; }
            p { color: #666; }
        </style>
    </head>
    <body>
        <h1>503 - Service Unavailable</h1>
        <p>HawkFish is temporarily unavailable. Please try again later.</p>
        <p><a href="/">Retry</a></p>
    </body>
    </html>

---
# NGINX configuration for error pages
apiVersion: v1
kind: ConfigMap
metadata:
  name: hawkfish-error-nginx-config
  namespace: hawkfish
data:
  nginx.conf: |
    events {
        worker_connections 1024;
    }
    
    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        
        server {
            listen 8080;
            server_name _;
            
            location / {
                root /usr/share/nginx/html;
                try_files $uri $uri.html =404;
            }
            
            location = /404 {
                internal;
                root /usr/share/nginx/html;
                try_files /404.html =404;
            }
            
            location = /503 {
                internal;
                root /usr/share/nginx/html;
                try_files /503.html =503;
            }
        }
    }

{{- if .Values.tests.enabled }}
apiVersion: v1
kind: Pod
metadata:
  name: "{{ include "hawkfish.fullname" . }}-test-connection"
  labels:
    {{- include "hawkfish.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  restartPolicy: Never
  containers:
    - name: curl
      image: "{{ .Values.tests.image.registry }}/{{ .Values.tests.image.repository }}:{{ .Values.tests.image.tag }}"
      imagePullPolicy: {{ .Values.tests.image.pullPolicy }}
      command:
        - /bin/sh
        - -c
        - |
          set -e
          echo "Testing HawkFish API connectivity..."
          
          # Test service root endpoint
          echo "Testing service root..."
          curl -f -s "http://{{ include "hawkfish.fullname" . }}:{{ .Values.service.port }}/redfish/v1/" | grep -q "ServiceRoot"
          echo "✓ Service root accessible"
          
          # Test health endpoint
          echo "Testing health endpoint..."
          curl -f -s "http://{{ include "hawkfish.fullname" . }}:{{ .Values.service.port }}/redfish/v1/" > /dev/null
          echo "✓ Health check passed"
          
          {{- if .Values.hawkfish.metrics.enabled }}
          # Test metrics endpoint
          echo "Testing metrics endpoint..."
          curl -f -s "http://{{ include "hawkfish.fullname" . }}:{{ .Values.service.port }}{{ .Values.hawkfish.metrics.path }}" > /dev/null
          echo "✓ Metrics endpoint accessible"
          {{- end }}
          
          {{- if .Values.hawkfish.ui.enabled }}
          # Test UI endpoint
          echo "Testing UI endpoint..."
          curl -f -s "http://{{ include "hawkfish.fullname" . }}:{{ .Values.service.port }}/ui/" > /dev/null
          echo "✓ UI endpoint accessible"
          {{- end }}
          
          echo "All tests passed successfully!"
{{- end }}
